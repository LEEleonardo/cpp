
1.	CVoter 클래스를 구현하자. Member variables는 사용자 id(string) 와 참가한 election 을 포함한다. 그런데 이 election은 한 번만 시행하는 것이 아니라 여러 차례 시행하는데 그 크기를 알 수 없다. 따라서 이것은 vector 형태로 만들어야 한다. 그런데 이 election은 그 자체로서 클래스 이다. 이 클래스는 CElection 클래스로 member variables는 상품명(string) 과 평가점수(int) 이다. 이 클래스에는 default 생성자와 더불어서 이 두 개의 변수를 입력받는 생성자가 존재한다. 각 클래스에서 accessor와 mutator는 구현 되어 있어야 한다. 참고로CVoter 클래스의 GetElection 이나 SetElection은 매개변수를 call by reference 로 해서 vector를 주고 받아야 한다. 또한 혹시라도 쓰기전에 기존 데이터가 있으면 지워줘야 한다. Clear()  그리고 ShowMe 라는 member function을 만들어서 user id와 각 election 에서 평가를 보여준다 [2점] 구현이 잘 되어 있는지 실험하기 위해서 Problem1 이라는 함수를 만들어서 CVoter 객체 한 개를 생성해서 2개의 election을 추가한다. 그리고 main함수에서 이 함수를 부른다. 여러분이 친절하다면 problem1 안에서 출력해서 보여주겠죠.   
2.	Main 함수에서 voter를 하나씩 생성할 때 마다 voter 수를 증가하고 싶다. 이를 위해서 static member variable을 이용해서 구현한다. 또한 현재 voter의 수를 출력할 수 있는 static function 을 구현한다. 또한 accessor 역시 static function으로 구현한다. [1점] main 함수에서 Problem2 라는 함수를 만들어서 보여주라. 
3.	CVoter 클래스에서 1번에 ShowMe 함수를 만들었다. 이것을 << operator로 friend standalone 함수로 overloading 해서 구현하시오. 물론 cascading이 가능해야 한다. 그리고 CVoter 매개변수는 상수 reference를 사용해야 한다.[1점] Problem3 이라는 함수로 보여주시오. 
4.	파일에서 읽어 들이는 방법에 대해서 첫 번째 숙제에서 예제로 설명해 주었다. 파일에서 제품의 평가를 읽어서 처리하도록 하자. Robot agent 가 Amazon 의 제품 페이지에 가서 그 제품의 평가를 파일로 저장한다. 저장 양식은 “제품명” “사용자 id” “평점” 이 세가지 이고 이 평가들이 파일 안에 한 줄씩 써서 현재까지 평가된 것을 저장하고 있다고 하자. 물론 Robot agent 는 다른 제품에 대해서 정보를 얻어서 동일한 파일에 추가할 수 있다.  파일의 이름은 amzonReview.txt 이다. 프로그램 테스트용으로 첫번째 숙제의 데이터 파일을 이용해서 작성하자. 첫번째 숙제의 data 파일에서는 5명의 voter와 6개의 product 그리고 점수는 1부터 5까지 주었다. 예시로 파일의 첫번째를 보여주자면 “A1” “r1” “1”, “A1” “r2” “1”, … 물론 파일안에서는 “” 따옴표는 당연히 없다. vector<CVoter> vecVoterList 라는 것을 main 함수에서 변수로 작성해서 만들고 Problem4 안에서 이 변수를 매개변수로 받아서 파일에서 읽어 들인다. 파일에서 읽어 들일 때 voter가 기존에 있는 것인지 파악하기 위해서 vector<string> vecStrVoterNames; 를 Problem4 함수에서 만들고 bool FindVoter(const vector<string>& vecStrVotername,string strVoter, int& nIndexOfVoter) 이라는 함수를 불러서 해당하는 voter가 있으면 vecVoterList의 해당하는 index의 voter에 새로운 election을 추가하고(이를 위해서 CVoter클래스에 member function으로 void AddElection(const CElection& aElection)를 추가 구현한다. 기존 voter list에 없는 경우라면 vecVoterList에 새로  voter를 추가하는데 방금 읽은 CElection 객체 즉 product와 rating을 포함한 voter를 추가한다. [2점] 잘 동작하는지 Problem4에서 출력해서 보여준다. 물론 정상적으로 동작하는지 파악하기 위해서 파일을 다 읽고 나서 Voter의 수를 출력하고(vector 의 size함수를 이용) 각 voter 별로 3번 << 을 이용하여  출력한다. 
5.	이제 마무리로 첫번째 숙제에서 pData 파일에서 읽었는데 이것 대신 4번에서 정한 amazonReview.txt 를 이용해서 읽어서 얻은 vecVoterList 를 이용해서 pDadta를 채워넣는다. [1점]. voter 수는 4번에서 이미 vecVoterList의 크기로 알수 있고, 마찬가지로 Election(제품의 이름이므로 CElection 이 아니고 string Election이다)역시 main 함수에 4번 문제에서 설명한 것 처럼 vector<string> vecElectionNames 선언한 다음 Problem5에서 각 voter별로 쭉 election 들을 살펴보면서 4번과 유사한 방법으로 다른 election 만을 vector에 넣을 수 있다. 끝으로 pData를 만들고 각 값을 집어넣고  table을 출력한다(첫번째 숙제에서 사용한 함수 가져와서 사용).     


